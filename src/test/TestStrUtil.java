package test;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;

import com.dreamer.common.util.StrUtil;

public class TestStrUtil {
    private String[] srcStrs = new String[] {
	    "-",
	    "交通用地(公共設施用地)(取得方式：征購)。【83/6/3】",
	    "人行步道用地(公共設施用地)(取得方式：未明文規定)。【64/10/20】",
	    "人行步道用地(公共設施用地)(取得方式：未明文規定)。【64/7/8】",
	    "人行步道用地(公共設施用地)(取得方式：未明文規定)。【65/2/14】",
	    "人行步道用地(公共設施用地)(取得方式：未明文規定)。【78/7/24】",
	    "人行步道用地(公共設施用地)及道路用地(公共設施用地)。",
	    "住商混合區(為容積接收區)。",
	    "住宅區",
	    "住宅區。",
	    "住宅區（住商混合）",
	    "保護區。",
	    "公園用地(公共設施用地)(取得方式：一般徵收)。【89/10/31】",
	    "公園用地(公共設施用地)(取得方式：征購及其他)。【64/7/8】",
	    "公園用地(公共設施用地)(取得方式：未明文規定)。【63/1/5】",
	    "公園用地(公共設施用地)(取得方式：未明文規定)。【65/8/23】",
	    "公園用地(公共設施用地)(取得方式：未明文規定)。【76/1/19】",
	    "公園用地(公共設施用地), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "公園用地(公共設施用地)。",
	    "公園用地(公共設施用地)。【63/1/5】",
	    "加油站用地(公共設施用地)。",
	    "商業區",
	    "國小用地(公共設施用地)(取得方式：征購)。【62/4/18】",
	    "工商服務展售區。",
	    "工商混合區",
	    "工商混合區。",
	    "排水溝用地(公共設施用地)(取得方式：徵收)。【78/8/25】",
	    "排水溝用地(公共設施用地), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "排水溝用地(公共設施用地)及道路用地(公共設施用地)。",
	    "煤氣公用事業用地(公共設施用地)(取得方式：收購)。【70/6/26】",
	    "煤氣公用事業用地(公共設施用地)。",
	    "科技工業區",
	    "科技工業區(A區)。",
	    "科技工業區(B區)(特), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "科技工業區(B區)(特)。",
	    "科技工業區(B區)(特)及道路用地(公共設施用地)。",
	    "科技工業區(B區)(特)及道路用地(公共設施用地)及公園用地(公共設施用地)。",
	    "科技工業區(B區), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "科技工業區(B區)。",
	    "第一種商業區",
	    "第一種商業區。",
	    "第一種商業區（特）",
	    "第三之一種住宅區, 但是否在第三種住宅區(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三之一種住宅區。",
	    "第三之一種住宅區及第三種住宅區, 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三之一種住宅區及第三種住宅區。",
	    "第三之二種住宅區(依都市計畫說明書圖規定辦理)及第三種住宅區。",
	    "第三種住宅區(特)。",
	    "第三種住宅區, 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三種住宅區, 但是否在郵政用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三種住宅區。",
	    "第三種住宅區及第三之一種住宅區, 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三種住宅區及第三之一種住宅區。",
	    "第三種住宅區及第二種住宅區, 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三種住宅區及第二種住宅區。",
	    "第三種商業區, 但是否在人行步道用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三種商業區, 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第三種商業區。",
	    "第二之一種住宅區(依都市計畫說明書圖規定辦理)。",
	    "第二之一種住宅區(依都市計畫說明書圖規定辦理)及第二種住宅區。",
	    "第二之二種住宅區(依都市計畫說明書圖規定辦理)。",
	    "第二種住宅區",
	    "第二種住宅區, 但是否在第三之一種住宅區(應依建築線或俟地籍測量分割後，再確定)。",
	    "第二種住宅區, 但是否在第三種住宅區(應依建築線或俟地籍測量分割後，再確定)。",
	    "第二種住宅區, 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第二種住宅區。",
	    "第二種住宅區及第三種住宅區。",
	    "第二種住宅區及道路用地(公共設施用地)。",
	    "第參種商業區(依都市計畫說明書圖規定辦理，始得作第參種商業區使用)(原屬第參之壹種住宅區)。",
	    "第參種商業區(依都市計畫說明書圖規定辦理，始得作第參種商業區使用)(原屬第參之壹種住宅區)及第三種住宅區。",
	    "第參種商業區(依都市計畫說明書圖規定辦理，始得作第參種商業區使用)(原屬第參種住宅區), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第參種商業區(依都市計畫說明書圖規定辦理，始得作第參種商業區使用)(原屬第參種住宅區)。",
	    "第參種商業區(依都市計畫說明書圖規定辦理，始得作第參種商業區使用)(原屬第壹種商業區), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第參種商業區(依都市計畫說明書圖規定辦理，始得作第參種商業區使用)(原屬第壹種商業區)。",
	    "第參種工業區。",
	    "第壹種商業區(依都市計畫說明書圖規定辦理，始得作第壹種商業區使用)(原屬第參之壹種住宅區), 但是否在道路用地(公共設施用地)(應依建築線或俟地籍測量分割後，再確定)。",
	    "第壹種商業區(依都市計畫說明書圖規定辦理，始得作第壹種商業區使用)(原屬第參之壹種住宅區)。",
	    "第壹種商業區(依都市計畫說明書圖規定辦理，始得作第壹種商業區使用)(原屬第參之貳種住宅區)。",
	    "第壹種商業區(依都市計畫說明書圖規定辦理，始得作第壹種商業區使用)(原屬第參種住宅區)。",
	    "第壹種商業區(依都市計畫說明書圖規定辦理，始得作第壹種商業區使用)(原屬第貳種住宅區)。",
	    "第貳種工業區。",
	    "變電所用地",
	    "變電所用地(公共設施用地)。",
	    "辦公服務區",
	    "辦公服務區(一)。",
	    "辦公服務區(二)。",
	    "道路用地",
	    "道路用地(公共設施用地)(取得方式：征購)。【63/1/30】",
	    "道路用地(公共設施用地)(取得方式：征購)。【63/1/5】",
	    "道路用地(公共設施用地)(取得方式：征購)。【64/7/2】",
	    "道路用地(公共設施用地)(取得方式：征購)。【64/8/7】",
	    "道路用地(公共設施用地)(取得方式：征購)。【65/2/14】",
	    "道路用地(公共設施用地)(取得方式：征購)。【73/5/2】",
	    "道路用地(公共設施用地)(取得方式：征購)。【78/12/26】",
	    "道路用地(公共設施用地)(取得方式：征購及其他)。【63/1/5】",
	    "道路用地(公共設施用地)(取得方式：征購及其他)。【64/10/20】",
	    "道路用地(公共設施用地)(取得方式：征購及其他)。【64/7/8】",
	    "道路用地(公共設施用地)(取得方式：征購及其他)。【65/4/15】",
	    "道路用地(公共設施用地)(取得方式：征購及其他)。【76/1/19】",
	    "道路用地(公共設施用地)(取得方式：征購及其他及未明文規定)。【65/4/15】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【62/4/18】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【63/1/5】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【63/2/1】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【64/10/20】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【64/7/2】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【64/7/8】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【64/8/1】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【64/8/7】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【64/9/2】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【65/2/11】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【65/2/13】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【65/2/14】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【65/4/15】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【71/4/27】",
	    "道路用地(公共設施用地)(取得方式：未明文規定)。【76/1/19】",
	    "道路用地(公共設施用地), 但是否在第三種住宅區(應依建築線或俟地籍測量分割後，再確定)。",
	    "道路用地(公共設施用地)。",
	    "道路用地(公共設施用地)及科技工業區(B區)(特)及綠地用地(公共設施用地)。",
	    "道路護坡用地(公共設施用地)(取得方式：征購)。【76/4/21】",
	    "道路護坡用地(公共設施用地)(取得方式：征購)。【78/7/27】",
	    "郵政用地",
	    "郵政用地(公共設施用地), 但是否在第三種住宅區(應依建築線或俟地籍測量分割後，再確定)。",
	    "郵政用地(公共設施用地)。",
	    "金融資訊專用區。",
	    "電信用地",
	    "電信用地(公共設施用地)。",
	    "電信用地(公共設施用地)。【71/4/27】",
	    "電力用地",
	    "電力設施用地(公共設施用地)(取得方式：征購)。【71/4/27】",
	    "電力設施用地(公共設施用地)(取得方式：征購)。【88/7/19】",
	    "電力設施用地(公共設施用地)(取得方式：征購)。【94/12/20】",
	    "電力設施用地(公共設施用地)(取得方式：徵購)。【88/7/19】",
	    "電力設施用地(公共設施用地)(取得方式：徵購)。【94/12/20】",
	    "電力設施用地(公共設施用地)。",
	    "電力設施用地(公共設施用地)。【88/7/19】",
	    "高速公路用地(公共設施用地)(取得方式：未明文規定)。【62/8/14】"
    };
    
    private void start() {
	ArrayList<String> resultStr = new ArrayList<String>();
	
	for (String srcStr : srcStrs) {
	    String cutOffByKeyword = StrUtil.cutOffByKeyword(srcStr);
	    resultStr.add(cutOffByKeyword);
	}
	
	writeToTestFile(resultStr);
    }

    private void writeToTestFile(ArrayList<String> resultStr) {
	RandomAccessFile writer = null;
	try {
	    writer = new RandomAccessFile(new File("C://TestResult.txt"), "rw");
	    
	    for (int i = 0; i < srcStrs.length; i++) {
		writer.write("Src: ".getBytes());
		writer.write(srcStrs[i].getBytes());
		writer.write(0x0D);
		writer.write(0x0A);
		
		writer.write("Result: ".getBytes());
		writer.write(resultStr.get(i).getBytes());
		writer.write(0x0D);
		writer.write(0x0A);
		
		writer.write("-----------------------------------".getBytes());
		writer.write(0x0D);
		writer.write(0x0A);
	    }
	} 
	catch (IOException e) {
	    e.printStackTrace();
	}
	finally {
	    if (writer != null) {
		try {
		    writer.close();
		}
		catch (IOException e) {
		    e.printStackTrace();
		}
		finally {
		    writer = null;
		}
	    }
	}
    }

    public static void main(String[] args) {
	new TestStrUtil().start();
    }
}